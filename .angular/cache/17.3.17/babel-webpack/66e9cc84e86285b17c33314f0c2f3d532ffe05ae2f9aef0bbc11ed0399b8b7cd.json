{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nlet AdminGuard = class AdminGuard {\n  constructor(auth, router) {\n    this.auth = auth;\n    this.router = router;\n  }\n  canActivate() {\n    if (this.auth.isLoggedIn && this.auth.isAdmin()) return true;\n    return this.router.createUrlTree(['/auth/login'], {\n      queryParams: {\n        returnUrl: '/admin'\n      }\n    });\n  }\n};\nAdminGuard = __decorate([Injectable({\n  providedIn: 'root'\n})], AdminGuard);\nexport { AdminGuard };","map":{"version":3,"names":["Injectable","AdminGuard","constructor","auth","router","canActivate","isLoggedIn","isAdmin","createUrlTree","queryParams","returnUrl","__decorate","providedIn"],"sources":["/Users/zaq/Documents/GitHub/Angular-APWU/src/app/core/guards/admin.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { AuthService } from '../auth/auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AdminGuard implements CanActivate {\n  constructor(private auth: AuthService, private router: Router) {}\n\n  canActivate(): boolean | UrlTree {\n    if (this.auth.isLoggedIn && this.auth.isAdmin()) return true;\n    return this.router.createUrlTree(['/auth/login'], { queryParams: { returnUrl: '/admin' } });\n  }\n}\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAKnC,IAAMC,UAAU,GAAhB,MAAMA,UAAU;EACrBC,YAAoBC,IAAiB,EAAUC,MAAc;IAAzC,KAAAD,IAAI,GAAJA,IAAI;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEhEC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACF,IAAI,CAACG,UAAU,IAAI,IAAI,CAACH,IAAI,CAACI,OAAO,EAAE,EAAE,OAAO,IAAI;IAC5D,OAAO,IAAI,CAACH,MAAM,CAACI,aAAa,CAAC,CAAC,aAAa,CAAC,EAAE;MAAEC,WAAW,EAAE;QAAEC,SAAS,EAAE;MAAQ;IAAE,CAAE,CAAC;EAC7F;CACD;AAPYT,UAAU,GAAAU,UAAA,EADtBX,UAAU,CAAC;EAAEY,UAAU,EAAE;AAAM,CAAE,CAAC,C,EACtBX,UAAU,CAOtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}