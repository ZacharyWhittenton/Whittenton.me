{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet BlogEditorComponent = class BlogEditorComponent {\n  constructor(fb, route, router, blog) {\n    this.fb = fb;\n    this.route = route;\n    this.router = router;\n    this.blog = blog;\n    this.isEdit = false;\n    this.form = this.fb.group({\n      title: ['', [Validators.required, Validators.minLength(3)]],\n      slug: [''],\n      author: [''],\n      tags: [''],\n      body: ['', [Validators.required, Validators.minLength(5)]],\n      published: [true]\n    });\n  }\n  ngOnInit() {\n    const slug = this.route.snapshot.paramMap.get('slug');\n    if (slug) {\n      const p = this.blog.getBySlug(slug);\n      if (p) {\n        this.isEdit = true;\n        this.originalSlug = p.slug;\n        this.form.patchValue({\n          title: p.title,\n          slug: p.slug,\n          author: p.author || '',\n          tags: (p.tags || []).join(', '),\n          body: p.body,\n          published: p.published\n        });\n      }\n    }\n  }\n  save() {\n    if (this.form.invalid) {\n      this.form.markAllAsTouched();\n      return;\n    }\n    const v = this.form.getRawValue();\n    const payload = {\n      title: v.title.trim(),\n      slug: (v.slug || '').trim(),\n      author: (v.author || '').trim(),\n      tags: (v.tags || '').split(',').map(t => t.trim()).filter(Boolean),\n      body: v.body,\n      published: !!v.published\n    };\n    if (this.isEdit && this.originalSlug) {\n      const updated = this.blog.update(this.originalSlug, payload);\n      if (updated) {\n        this.router.navigate(['/blog', updated.slug]);\n      }\n    } else {\n      const created = this.blog.create(payload);\n      this.router.navigate(['/blog', created.slug]);\n    }\n  }\n  cancel() {\n    if (this.isEdit && this.originalSlug) {\n      this.router.navigate(['/blog', this.originalSlug]);\n    } else {\n      this.router.navigate(['/blog']);\n    }\n  }\n};\nBlogEditorComponent = __decorate([Component({\n  selector: 'app-blog-editor',\n  templateUrl: './editor.component.html'\n})], BlogEditorComponent);\nexport { BlogEditorComponent };","map":{"version":3,"names":["Component","Validators","BlogEditorComponent","constructor","fb","route","router","blog","isEdit","form","group","title","required","minLength","slug","author","tags","body","published","ngOnInit","snapshot","paramMap","get","p","getBySlug","originalSlug","patchValue","join","save","invalid","markAllAsTouched","v","getRawValue","payload","trim","split","map","t","filter","Boolean","updated","update","navigate","created","create","cancel","__decorate","selector","templateUrl"],"sources":["/Users/zaq/Documents/GitHub/Angular-APWU/src/app/features/blog/components/blog-editor/blog-editor.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BlogService, Post } from '../../services/blog.service';\n\n@Component({\n  selector: 'app-blog-editor',\n  templateUrl: './editor.component.html',\n})\nexport class BlogEditorComponent implements OnInit {\n  isEdit = false;\n  originalSlug?: string;\n\n  form = this.fb.group({\n    title: ['', [Validators.required, Validators.minLength(3)]],\n    slug: [''],\n    author: [''],\n    tags: [''],\n    body: ['', [Validators.required, Validators.minLength(5)]],\n    published: [true],\n  });\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private blog: BlogService\n  ) {}\n\n  ngOnInit(): void {\n    const slug = this.route.snapshot.paramMap.get('slug');\n    if (slug) {\n      const p = this.blog.getBySlug(slug);\n      if (p) {\n        this.isEdit = true;\n        this.originalSlug = p.slug;\n        this.form.patchValue({\n          title: p.title,\n          slug: p.slug,\n          author: p.author || '',\n          tags: (p.tags || []).join(', '),\n          body: p.body,\n          published: p.published,\n        });\n      }\n    }\n  }\n\n  save() {\n    if (this.form.invalid) {\n      this.form.markAllAsTouched();\n      return;\n    }\n    const v = this.form.getRawValue();\n    const payload = {\n      title: v.title!.trim(),\n      slug: (v.slug || '').trim(),\n      author: (v.author || '').trim(),\n      tags: (v.tags || '')\n        .split(',')\n        .map(t => t.trim())\n        .filter(Boolean),\n      body: v.body!,\n      published: !!v.published,\n    };\n\n    if (this.isEdit && this.originalSlug) {\n      const updated = this.blog.update(this.originalSlug, payload as Partial<Post>);\n      if (updated) {\n        this.router.navigate(['/blog', updated.slug]);\n      }\n    } else {\n      const created = this.blog.create(payload as any);\n      this.router.navigate(['/blog', created.slug]);\n    }\n  }\n\n  cancel() {\n    if (this.isEdit && this.originalSlug) {\n      this.router.navigate(['/blog', this.originalSlug]);\n    } else {\n      this.router.navigate(['/blog']);\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}