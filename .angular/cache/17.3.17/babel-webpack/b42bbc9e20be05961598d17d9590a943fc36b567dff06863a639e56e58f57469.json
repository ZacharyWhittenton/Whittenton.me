{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AdminDashboardComponent = class AdminDashboardComponent {\n  constructor(auth, blog) {\n    this.auth = auth;\n    this.blog = blog;\n    this.users = [];\n    this.posts = [];\n    this.recentPosts = [];\n    // quick metrics\n    this.totalUsers = 0;\n    this.admins = 0;\n    this.members = 0;\n    this.totalPosts = 0;\n    this.publishedPosts = 0;\n    this.draftPosts = 0;\n  }\n  ngOnInit() {\n    this.loadUsers();\n    this.loadPosts();\n  }\n  loadUsers() {\n    this.users = this.auth.listUsers();\n    this.totalUsers = this.users.length;\n    this.admins = this.users.filter(u => u.roles.includes('Admin')).length;\n    this.members = this.users.filter(u => u.roles.includes('Member')).length;\n  }\n  loadPosts() {\n    this.posts = this.blog.list(); // sorted by date in the service\n    this.totalPosts = this.posts.length;\n    this.publishedPosts = this.posts.filter(p => p.published).length;\n    this.draftPosts = this.totalPosts - this.publishedPosts;\n    this.recentPosts = this.posts.slice(0, 5);\n  }\n  tagText(p) {\n    return (p.tags ?? []).join(', ');\n  }\n};\nAdminDashboardComponent = __decorate([Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.css']\n})], AdminDashboardComponent);\nexport { AdminDashboardComponent };","map":{"version":3,"names":["Component","AdminDashboardComponent","constructor","auth","blog","users","posts","recentPosts","totalUsers","admins","members","totalPosts","publishedPosts","draftPosts","ngOnInit","loadUsers","loadPosts","listUsers","length","filter","u","roles","includes","list","p","published","slice","tagText","tags","join","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/zaq/Documents/GitHub/Angular-APWU/src/app/features/admin/pages/dashboard/dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService, User } from '../../../../core/services/auth.service';\nimport { BlogService, Post } from '../../../blog/services/blog.service';\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.css'],\n})\nexport class AdminDashboardComponent implements OnInit {\n  users: User[] = [];\n  posts: Post[] = [];\n  recentPosts: Post[] = [];\n\n  // quick metrics\n  totalUsers = 0;\n  admins = 0;\n  members = 0;\n\n  totalPosts = 0;\n  publishedPosts = 0;\n  draftPosts = 0;\n\n  constructor(private auth: AuthService, private blog: BlogService) {}\n\n  ngOnInit(): void {\n    this.loadUsers();\n    this.loadPosts();\n  }\n\n  private loadUsers() {\n    this.users = this.auth.listUsers();\n    this.totalUsers = this.users.length;\n    this.admins = this.users.filter(u => u.roles.includes('Admin')).length;\n    this.members = this.users.filter(u => u.roles.includes('Member')).length;\n  }\n\n  private loadPosts() {\n    this.posts = this.blog.list(); // sorted by date in the service\n    this.totalPosts = this.posts.length;\n    this.publishedPosts = this.posts.filter(p => p.published).length;\n    this.draftPosts = this.totalPosts - this.publishedPosts;\n    this.recentPosts = this.posts.slice(0, 5);\n  }\n\n  tagText(p: Post): string {\n    return (p.tags ?? []).join(', ');\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,IAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAclCC,YAAoBC,IAAiB,EAAUC,IAAiB;IAA5C,KAAAD,IAAI,GAAJA,IAAI;IAAuB,KAAAC,IAAI,GAAJA,IAAI;IAbnD,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,WAAW,GAAW,EAAE;IAExB;IACA,KAAAC,UAAU,GAAG,CAAC;IACd,KAAAC,MAAM,GAAG,CAAC;IACV,KAAAC,OAAO,GAAG,CAAC;IAEX,KAAAC,UAAU,GAAG,CAAC;IACd,KAAAC,cAAc,GAAG,CAAC;IAClB,KAAAC,UAAU,GAAG,CAAC;EAEqD;EAEnEC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,EAAE;IAChB,IAAI,CAACC,SAAS,EAAE;EAClB;EAEQD,SAASA,CAAA;IACf,IAAI,CAACV,KAAK,GAAG,IAAI,CAACF,IAAI,CAACc,SAAS,EAAE;IAClC,IAAI,CAACT,UAAU,GAAG,IAAI,CAACH,KAAK,CAACa,MAAM;IACnC,IAAI,CAACT,MAAM,GAAG,IAAI,CAACJ,KAAK,CAACc,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,KAAK,CAACC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAACJ,MAAM;IACtE,IAAI,CAACR,OAAO,GAAG,IAAI,CAACL,KAAK,CAACc,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,KAAK,CAACC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAACJ,MAAM;EAC1E;EAEQF,SAASA,CAAA;IACf,IAAI,CAACV,KAAK,GAAG,IAAI,CAACF,IAAI,CAACmB,IAAI,EAAE,CAAC,CAAC;IAC/B,IAAI,CAACZ,UAAU,GAAG,IAAI,CAACL,KAAK,CAACY,MAAM;IACnC,IAAI,CAACN,cAAc,GAAG,IAAI,CAACN,KAAK,CAACa,MAAM,CAACK,CAAC,IAAIA,CAAC,CAACC,SAAS,CAAC,CAACP,MAAM;IAChE,IAAI,CAACL,UAAU,GAAG,IAAI,CAACF,UAAU,GAAG,IAAI,CAACC,cAAc;IACvD,IAAI,CAACL,WAAW,GAAG,IAAI,CAACD,KAAK,CAACoB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3C;EAEAC,OAAOA,CAACH,CAAO;IACb,OAAO,CAACA,CAAC,CAACI,IAAI,IAAI,EAAE,EAAEC,IAAI,CAAC,IAAI,CAAC;EAClC;CACD;AAvCY5B,uBAAuB,GAAA6B,UAAA,EALnC9B,SAAS,CAAC;EACT+B,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACWhC,uBAAuB,CAuCnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}