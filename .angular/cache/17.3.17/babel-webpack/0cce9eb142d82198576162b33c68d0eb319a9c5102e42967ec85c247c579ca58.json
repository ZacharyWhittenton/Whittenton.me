{"ast":null,"code":"import { RouterModule, PreloadAllModules } from '@angular/router';\nimport { HomeComponent } from './pages/home/home.component';\nimport { AboutComponent } from './pages/about/about.component';\nimport { ServicesComponent } from './pages/services/services.component';\nimport { ProjectsComponent } from './pages/projects/projects.component';\nimport { PortfolioComponent } from './pages/portfolio/portfolio.component';\nimport { ContactComponent } from './pages/contact/contact.component';\nimport { AuthGuard } from './core/guards/auth.guard';\nimport { AdminGuard } from './core/guards/admin.guard';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [\n// Public pages\n{\n  path: '',\n  component: HomeComponent\n}, {\n  path: 'about',\n  component: AboutComponent\n}, {\n  path: 'services',\n  component: ServicesComponent\n}, {\n  path: 'projects',\n  component: ProjectsComponent\n}, {\n  path: 'portfolio',\n  component: PortfolioComponent\n}, {\n  path: 'contact',\n  component: ContactComponent\n},\n// Root /login convenience -> /auth/login\n{\n  path: 'login',\n  redirectTo: 'auth/login',\n  pathMatch: 'full'\n},\n// Feature areas (lazy)\n{\n  path: 'auth',\n  loadChildren: () => import('./features/auth/auth.module').then(m => m.AuthModule)\n},\n// Members-only\n{\n  path: 'blog',\n  loadChildren: () => import('./features/blog/blog.module').then(m => m.BlogModule)\n}, {\n  path: 'scheduler',\n  canActivate: [AuthGuard],\n  loadChildren: () => import('./features/scheduler/scheduler.module').then(m => m.SchedulerModule),\n  runGuardsAndResolvers: 'always'\n},\n// Admin-only\n{\n  path: 'admin',\n  canActivate: [AdminGuard],\n  loadChildren: () => import('./features/admin/admin.module').then(m => m.AdminModule),\n  runGuardsAndResolvers: 'always'\n},\n// Fallback\n{\n  path: '**',\n  redirectTo: ''\n}];\nexport class AppRoutingModule {\n  static {\n    this.ɵfac = function AppRoutingModule_Factory(t) {\n      return new (t || AppRoutingModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppRoutingModule\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [RouterModule.forRoot(routes, {\n        initialNavigation: 'enabledBlocking',\n        scrollPositionRestoration: 'enabled',\n        anchorScrolling: 'enabled',\n        paramsInheritanceStrategy: 'always',\n        onSameUrlNavigation: 'reload',\n        preloadingStrategy: PreloadAllModules\n      }), RouterModule]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();\nç;","map":{"version":3,"names":["RouterModule","PreloadAllModules","HomeComponent","AboutComponent","ServicesComponent","ProjectsComponent","PortfolioComponent","ContactComponent","AuthGuard","AdminGuard","routes","path","component","redirectTo","pathMatch","loadChildren","then","m","AuthModule","BlogModule","canActivate","SchedulerModule","runGuardsAndResolvers","AdminModule","AppRoutingModule","forRoot","initialNavigation","scrollPositionRestoration","anchorScrolling","paramsInheritanceStrategy","onSameUrlNavigation","preloadingStrategy","imports","i1","exports","ç"],"sources":["/Users/zaq/Documents/GitHub/Angular-APWU/src/app/app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes, PreloadAllModules } from '@angular/router';\n\nimport { HomeComponent } from './pages/home/home.component';\nimport { AboutComponent } from './pages/about/about.component';\nimport { ServicesComponent } from './pages/services/services.component';\nimport { ProjectsComponent } from './pages/projects/projects.component';\nimport { PortfolioComponent } from './pages/portfolio/portfolio.component';\nimport { ContactComponent } from './pages/contact/contact.component';\n\nimport { AuthGuard } from './core/guards/auth.guard';\nimport { AdminGuard } from './core/guards/admin.guard';\n\nconst routes: Routes = [\n  // Public pages\n  { path: '', component: HomeComponent },\n  { path: 'about', component: AboutComponent },\n  { path: 'services', component: ServicesComponent },\n  { path: 'projects', component: ProjectsComponent },\n  { path: 'portfolio', component: PortfolioComponent },\n  { path: 'contact', component: ContactComponent },\n\n  // Root /login convenience -> /auth/login\n  { path: 'login', redirectTo: 'auth/login', pathMatch: 'full' },\n\n  // Feature areas (lazy)\n  { path: 'auth', loadChildren: () => import('./features/auth/auth.module').then(m => m.AuthModule) },\n\n  // Members-only\n  { path: 'blog', loadChildren: () => import('./features/blog/blog.module').then(m => m.BlogModule) },\n  {\n    path: 'scheduler',\n    canActivate: [AuthGuard],\n    loadChildren: () => import('./features/scheduler/scheduler.module').then(m => m.SchedulerModule),\n    runGuardsAndResolvers: 'always',\n  },\n\n  // Admin-only\n  {\n    path: 'admin',\n    canActivate: [AdminGuard],\n    loadChildren: () => import('./features/admin/admin.module').then(m => m.AdminModule),\n    runGuardsAndResolvers: 'always',\n  },\n\n  // Fallback\n  { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      initialNavigation: 'enabledBlocking',\n      scrollPositionRestoration: 'enabled',\n      anchorScrolling: 'enabled',\n      paramsInheritanceStrategy: 'always',\n      onSameUrlNavigation: 'reload',\n      preloadingStrategy: PreloadAllModules,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\nç"],"mappings":"AACA,SAASA,YAAY,EAAUC,iBAAiB,QAAQ,iBAAiB;AAEzE,SAASC,aAAa,QAAQ,6BAA6B;AAC3D,SAASC,cAAc,QAAQ,+BAA+B;AAC9D,SAASC,iBAAiB,QAAQ,qCAAqC;AACvE,SAASC,iBAAiB,QAAQ,qCAAqC;AACvE,SAASC,kBAAkB,QAAQ,uCAAuC;AAC1E,SAASC,gBAAgB,QAAQ,mCAAmC;AAEpE,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,UAAU,QAAQ,2BAA2B;;;AAEtD,MAAMC,MAAM,GAAW;AACrB;AACA;EAAEC,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAEV;AAAa,CAAE,EACtC;EAAES,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAET;AAAc,CAAE,EAC5C;EAAEQ,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAER;AAAiB,CAAE,EAClD;EAAEO,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEP;AAAiB,CAAE,EAClD;EAAEM,IAAI,EAAE,WAAW;EAAEC,SAAS,EAAEN;AAAkB,CAAE,EACpD;EAAEK,IAAI,EAAE,SAAS;EAAEC,SAAS,EAAEL;AAAgB,CAAE;AAEhD;AACA;EAAEI,IAAI,EAAE,OAAO;EAAEE,UAAU,EAAE,YAAY;EAAEC,SAAS,EAAE;AAAM,CAAE;AAE9D;AACA;EAAEH,IAAI,EAAE,MAAM;EAAEI,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,6BAA6B,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,UAAU;AAAC,CAAE;AAEnG;AACA;EAAEP,IAAI,EAAE,MAAM;EAAEI,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,6BAA6B,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACE,UAAU;AAAC,CAAE,EACnG;EACER,IAAI,EAAE,WAAW;EACjBS,WAAW,EAAE,CAACZ,SAAS,CAAC;EACxBO,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,uCAAuC,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACI,eAAe,CAAC;EAChGC,qBAAqB,EAAE;CACxB;AAED;AACA;EACEX,IAAI,EAAE,OAAO;EACbS,WAAW,EAAE,CAACX,UAAU,CAAC;EACzBM,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,+BAA+B,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACM,WAAW,CAAC;EACpFD,qBAAqB,EAAE;CACxB;AAED;AACA;EAAEX,IAAI,EAAE,IAAI;EAAEE,UAAU,EAAE;AAAE,CAAE,CAC/B;AAeD,OAAM,MAAOW,gBAAgB;;;uBAAhBA,gBAAgB;IAAA;EAAA;;;YAAhBA;IAAgB;EAAA;;;gBAXzBxB,YAAY,CAACyB,OAAO,CAACf,MAAM,EAAE;QAC3BgB,iBAAiB,EAAE,iBAAiB;QACpCC,yBAAyB,EAAE,SAAS;QACpCC,eAAe,EAAE,SAAS;QAC1BC,yBAAyB,EAAE,QAAQ;QACnCC,mBAAmB,EAAE,QAAQ;QAC7BC,kBAAkB,EAAE9B;OACrB,CAAC,EAEMD,YAAY;IAAA;EAAA;;;2EAEXwB,gBAAgB;IAAAQ,OAAA,GAAAC,EAAA,CAAAjC,YAAA;IAAAkC,OAAA,GAFjBlC,YAAY;EAAA;AAAA;AAGxBmC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}