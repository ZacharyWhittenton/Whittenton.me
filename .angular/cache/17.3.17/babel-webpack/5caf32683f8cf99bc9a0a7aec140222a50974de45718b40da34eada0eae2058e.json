{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { BlogComponent } from './blog.component';\nimport { BlogListComponent } from './components/blog-list/blog-list.component';\nimport { BlogDetailComponent } from './components/blog-detail/blog-detail.component';\nimport { BlogEditorComponent } from './components/blog-editor/blog-editor.component';\nimport { AuthGuard } from '../../core/guards/auth.guard';\nimport { RoleGuard } from '../../core/guards/role.guard';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  component: BlogComponent,\n  children: [{\n    path: '',\n    component: BlogListComponent\n  },\n  // Admin-only: create/edit\n  {\n    path: 'new',\n    component: BlogEditorComponent,\n    canActivate: [AuthGuard, RoleGuard],\n    data: {\n      roles: ['Admin']\n    }\n  }, {\n    path: ':id/edit',\n    component: BlogEditorComponent,\n    canActivate: [AuthGuard, RoleGuard],\n    data: {\n      roles: ['Admin']\n    }\n  },\n  // Public: read a post\n  {\n    path: ':id',\n    component: BlogDetailComponent\n  }]\n}];\nexport class BlogRoutingModule {\n  static {\n    this.ɵfac = function BlogRoutingModule_Factory(t) {\n      return new (t || BlogRoutingModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: BlogRoutingModule\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [RouterModule.forChild(routes), RouterModule]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(BlogRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","BlogComponent","BlogListComponent","BlogDetailComponent","BlogEditorComponent","AuthGuard","RoleGuard","routes","path","component","children","canActivate","data","roles","BlogRoutingModule","forChild","imports","i1","exports"],"sources":["/Users/zaq/Documents/GitHub/Angular-APWU/src/app/features/blog/blog-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { BlogComponent } from './blog.component';\nimport { BlogListComponent } from './components/blog-list/blog-list.component';\nimport { BlogDetailComponent } from './components/blog-detail/blog-detail.component';\nimport { BlogEditorComponent } from './components/blog-editor/blog-editor.component';\n\nimport { AuthGuard } from '../../core/guards/auth.guard';\nimport { RoleGuard } from '../../core/guards/role.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BlogComponent,\n    children: [\n      { path: '', component: BlogListComponent }, // list in the shell\n\n      // Admin-only: create/edit\n      {\n        path: 'new',\n        component: BlogEditorComponent,\n        canActivate: [AuthGuard, RoleGuard],\n        data: { roles: ['Admin'] },\n      },\n      {\n        path: ':id/edit',\n        component: BlogEditorComponent,\n        canActivate: [AuthGuard, RoleGuard],\n        data: { roles: ['Admin'] },\n      },\n\n      // Public: read a post\n      { path: ':id', component: BlogDetailComponent },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class BlogRoutingModule {}\n"],"mappings":"AACA,SAASA,YAAY,QAAgB,iBAAiB;AAEtD,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,iBAAiB,QAAQ,4CAA4C;AAC9E,SAASC,mBAAmB,QAAQ,gDAAgD;AACpF,SAASC,mBAAmB,QAAQ,gDAAgD;AAEpF,SAASC,SAAS,QAAQ,8BAA8B;AACxD,SAASC,SAAS,QAAQ,8BAA8B;;;AAExD,MAAMC,MAAM,GAAW,CACrB;EACEC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAER,aAAa;EACxBS,QAAQ,EAAE,CACR;IAAEF,IAAI,EAAE,EAAE;IAAEC,SAAS,EAAEP;EAAiB,CAAE;EAE1C;EACA;IACEM,IAAI,EAAE,KAAK;IACXC,SAAS,EAAEL,mBAAmB;IAC9BO,WAAW,EAAE,CAACN,SAAS,EAAEC,SAAS,CAAC;IACnCM,IAAI,EAAE;MAAEC,KAAK,EAAE,CAAC,OAAO;IAAC;GACzB,EACD;IACEL,IAAI,EAAE,UAAU;IAChBC,SAAS,EAAEL,mBAAmB;IAC9BO,WAAW,EAAE,CAACN,SAAS,EAAEC,SAAS,CAAC;IACnCM,IAAI,EAAE;MAAEC,KAAK,EAAE,CAAC,OAAO;IAAC;GACzB;EAED;EACA;IAAEL,IAAI,EAAE,KAAK;IAAEC,SAAS,EAAEN;EAAmB,CAAE;CAElD,CACF;AAMD,OAAM,MAAOW,iBAAiB;;;uBAAjBA,iBAAiB;IAAA;EAAA;;;YAAjBA;IAAiB;EAAA;;;gBAHlBd,YAAY,CAACe,QAAQ,CAACR,MAAM,CAAC,EAC7BP,YAAY;IAAA;EAAA;;;2EAEXc,iBAAiB;IAAAE,OAAA,GAAAC,EAAA,CAAAjB,YAAA;IAAAkB,OAAA,GAFlBlB,YAAY;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}