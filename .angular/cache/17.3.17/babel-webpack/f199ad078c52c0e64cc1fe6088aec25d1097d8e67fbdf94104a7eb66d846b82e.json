{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: 'login',\n  component: LoginComponent\n}, {\n  path: '',\n  pathMatch: 'full',\n  redirectTo: 'login'\n}];\nexport class AuthRoutingModule {\n  static {\n    this.ɵfac = function AuthRoutingModule_Factory(t) {\n      return new (t || AuthRoutingModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AuthRoutingModule\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [RouterModule.forChild(routes), RouterModule]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AuthRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","LoginComponent","routes","path","component","pathMatch","redirectTo","AuthRoutingModule","forChild","imports","i1","exports"],"sources":["/Users/zaq/Documents/GitHub/Angular-APWU/src/app/features/auth/auth-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent }, // /auth/login\n  { path: '', pathMatch: 'full', redirectTo: 'login' },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n"],"mappings":"AACA,SAASA,YAAY,QAAgB,iBAAiB;AACtD,SAASC,cAAc,QAAQ,yBAAyB;;;AAExD,MAAMC,MAAM,GAAW,CACrB;EAAEC,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAEH;AAAc,CAAE,EAC5C;EAAEE,IAAI,EAAE,EAAE;EAAEE,SAAS,EAAE,MAAM;EAAEC,UAAU,EAAE;AAAO,CAAE,CACrD;AAMD,OAAM,MAAOC,iBAAiB;;;uBAAjBA,iBAAiB;IAAA;EAAA;;;YAAjBA;IAAiB;EAAA;;;gBAHlBP,YAAY,CAACQ,QAAQ,CAACN,MAAM,CAAC,EAC7BF,YAAY;IAAA;EAAA;;;2EAEXO,iBAAiB;IAAAE,OAAA,GAAAC,EAAA,CAAAV,YAAA;IAAAW,OAAA,GAFlBX,YAAY;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}