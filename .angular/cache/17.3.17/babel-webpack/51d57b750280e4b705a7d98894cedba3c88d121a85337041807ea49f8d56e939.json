{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet LoginComponent = class LoginComponent {\n  constructor(fb, route, router, auth) {\n    this.fb = fb;\n    this.route = route;\n    this.router = router;\n    this.auth = auth;\n    this.loading = false;\n    this.error = '';\n    this.returnUrl = '/';\n    this.form = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(3)]],\n      role: ['Member'] // or 'Admin'\n    });\n  }\n  ngOnInit() {\n    const ru = this.route.snapshot.queryParamMap.get('returnUrl');\n    if (ru) this.returnUrl = ru;\n  }\n  submit() {\n    this.error = '';\n    if (this.form.invalid) {\n      this.form.markAllAsTouched();\n      return;\n    }\n    this.loading = true;\n    const v = this.form.getRawValue();\n    const ok = this.auth.login(v.email, v.password, v.role ?? 'Member');\n    this.loading = false;\n    if (ok) this.router.navigateByUrl(this.returnUrl);else this.error = 'Invalid credentials';\n  }\n  quickAdmin() {\n    if (this.auth.loginAsAdmin()) this.router.navigateByUrl(this.returnUrl);\n  }\n  quickMember() {\n    if (this.auth.loginAsMember()) this.router.navigateByUrl(this.returnUrl);\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["Component","Validators","LoginComponent","constructor","fb","route","router","auth","loading","error","returnUrl","form","group","email","required","password","minLength","role","ngOnInit","ru","snapshot","queryParamMap","get","submit","invalid","markAllAsTouched","v","getRawValue","ok","login","navigateByUrl","quickAdmin","loginAsAdmin","quickMember","loginAsMember","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/zaq/Documents/GitHub/Angular-APWU/src/app/features/auth/components/login/login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../../../core/auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  loading = false;\n  error = '';\n  returnUrl = '/';\n\n  form = this.fb.group({\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', [Validators.required, Validators.minLength(3)]],\n    role: ['Member'], // or 'Admin'\n  });\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private auth: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    const ru = this.route.snapshot.queryParamMap.get('returnUrl');\n    if (ru) this.returnUrl = ru;\n  }\n\n  submit() {\n    this.error = '';\n    if (this.form.invalid) {\n      this.form.markAllAsTouched();\n      return;\n    }\n    this.loading = true;\n\n    const v = this.form.getRawValue();\n    const ok = this.auth.login(\n      v.email!,\n      v.password!,\n      (v.role as 'Admin' | 'Member') ?? 'Member'\n    );\n\n    this.loading = false;\n    if (ok) this.router.navigateByUrl(this.returnUrl);\n    else this.error = 'Invalid credentials';\n  }\n\n  quickAdmin() {\n    if (this.auth.loginAsAdmin()) this.router.navigateByUrl(this.returnUrl);\n  }\n  quickMember() {\n    if (this.auth.loginAsMember()) this.router.navigateByUrl(this.returnUrl);\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAsBC,UAAU,QAAQ,gBAAgB;AASjD,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAWzBC,YACUC,EAAe,EACfC,KAAqB,EACrBC,MAAc,EACdC,IAAiB;IAHjB,KAAAH,EAAE,GAAFA,EAAE;IACF,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,IAAI,GAAJA,IAAI;IAdd,KAAAC,OAAO,GAAG,KAAK;IACf,KAAAC,KAAK,GAAG,EAAE;IACV,KAAAC,SAAS,GAAG,GAAG;IAEf,KAAAC,IAAI,GAAG,IAAI,CAACP,EAAE,CAACQ,KAAK,CAAC;MACnBC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACY,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACd,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACe,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9DC,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAE;KACnB,CAAC;EAOC;EAEHC,QAAQA,CAAA;IACN,MAAMC,EAAE,GAAG,IAAI,CAACd,KAAK,CAACe,QAAQ,CAACC,aAAa,CAACC,GAAG,CAAC,WAAW,CAAC;IAC7D,IAAIH,EAAE,EAAE,IAAI,CAACT,SAAS,GAAGS,EAAE;EAC7B;EAEAI,MAAMA,CAAA;IACJ,IAAI,CAACd,KAAK,GAAG,EAAE;IACf,IAAI,IAAI,CAACE,IAAI,CAACa,OAAO,EAAE;MACrB,IAAI,CAACb,IAAI,CAACc,gBAAgB,EAAE;MAC5B;;IAEF,IAAI,CAACjB,OAAO,GAAG,IAAI;IAEnB,MAAMkB,CAAC,GAAG,IAAI,CAACf,IAAI,CAACgB,WAAW,EAAE;IACjC,MAAMC,EAAE,GAAG,IAAI,CAACrB,IAAI,CAACsB,KAAK,CACxBH,CAAC,CAACb,KAAM,EACRa,CAAC,CAACX,QAAS,EACVW,CAAC,CAACT,IAA2B,IAAI,QAAQ,CAC3C;IAED,IAAI,CAACT,OAAO,GAAG,KAAK;IACpB,IAAIoB,EAAE,EAAE,IAAI,CAACtB,MAAM,CAACwB,aAAa,CAAC,IAAI,CAACpB,SAAS,CAAC,CAAC,KAC7C,IAAI,CAACD,KAAK,GAAG,qBAAqB;EACzC;EAEAsB,UAAUA,CAAA;IACR,IAAI,IAAI,CAACxB,IAAI,CAACyB,YAAY,EAAE,EAAE,IAAI,CAAC1B,MAAM,CAACwB,aAAa,CAAC,IAAI,CAACpB,SAAS,CAAC;EACzE;EACAuB,WAAWA,CAAA;IACT,IAAI,IAAI,CAAC1B,IAAI,CAAC2B,aAAa,EAAE,EAAE,IAAI,CAAC5B,MAAM,CAACwB,aAAa,CAAC,IAAI,CAACpB,SAAS,CAAC;EAC1E;CACD;AAjDYR,cAAc,GAAAiC,UAAA,EAL1BnC,SAAS,CAAC;EACToC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWpC,cAAc,CAiD1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}