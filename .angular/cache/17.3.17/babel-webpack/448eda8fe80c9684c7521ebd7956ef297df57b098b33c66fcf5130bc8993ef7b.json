{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/core/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(fb, authService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.loading = false;\n    this.error = null;\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.loginForm.invalid) return;\n    this.loading = true;\n    this.error = null;\n    this.authService.login(this.loginForm.value).subscribe({\n      next: () => {\n        this.router.navigate(['/blog']); // Redirect on success\n      },\n      error: () => {\n        this.error = 'Invalid email or password.';\n        this.loading = false;\n      }\n    });\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 2,\n      vars: 0,\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \"login works!\");\n          i0.ɵɵelementEnd();\n        }\n      },\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["Validators","LoginComponent","constructor","fb","authService","router","loading","error","loginForm","group","email","required","password","onSubmit","invalid","login","value","subscribe","next","navigate","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","selectors","decls","vars","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\Zachary\\Documents\\GitHub\\Angular-APWU\\src\\app\\features\\auth\\components\\login\\login.component.ts","C:\\Users\\Zachary\\Documents\\GitHub\\Angular-APWU\\src\\app\\features\\auth\\components\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from 'src/app/core/services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html'\r\n})\r\nexport class LoginComponent {\r\n  loginForm: FormGroup;\r\n  loading = false;\r\n  error: string | null = null;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    this.loginForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.loginForm.invalid) return;\r\n\r\n    this.loading = true;\r\n    this.error = null;\r\n\r\n    this.authService.login(this.loginForm.value).subscribe({\r\n      next: () => {\r\n        this.router.navigate(['/blog']); // Redirect on success\r\n      },\r\n      error: () => {\r\n        this.error = 'Invalid email or password.';\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<p>login works!</p>\r\n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AAQnE,OAAM,MAAOC,cAAc;EAKzBC,YACUC,EAAe,EACfC,WAAwB,EACxBC,MAAc;IAFd,KAAAF,EAAE,GAAFA,EAAE;IACF,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IANhB,KAAAC,OAAO,GAAG,KAAK;IACf,KAAAC,KAAK,GAAkB,IAAI;IAOzB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACL,EAAE,CAACM,KAAK,CAAC;MAC7BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACU,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACW,QAAQ;KACnC,CAAC;EACJ;EAEAE,QAAQA,CAAA;IACN,IAAI,IAAI,CAACL,SAAS,CAACM,OAAO,EAAE;IAE5B,IAAI,CAACR,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,KAAK,GAAG,IAAI;IAEjB,IAAI,CAACH,WAAW,CAACW,KAAK,CAAC,IAAI,CAACP,SAAS,CAACQ,KAAK,CAAC,CAACC,SAAS,CAAC;MACrDC,IAAI,EAAEA,CAAA,KAAK;QACT,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;MACnC,CAAC;MACDZ,KAAK,EAAEA,CAAA,KAAK;QACV,IAAI,CAACA,KAAK,GAAG,4BAA4B;QACzC,IAAI,CAACD,OAAO,GAAG,KAAK;MACtB;KACD,CAAC;EACJ;;;uBA/BWL,cAAc,EAAAmB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,MAAA;IAAA;EAAA;;;YAAd1B,cAAc;MAAA2B,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCT3Bb,EAAA,CAAAe,cAAA,QAAG;UAAAf,EAAA,CAAAgB,MAAA,mBAAY;UAAAhB,EAAA,CAAAiB,YAAA,EAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}