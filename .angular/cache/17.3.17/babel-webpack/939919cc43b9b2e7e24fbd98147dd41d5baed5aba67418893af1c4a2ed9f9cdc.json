{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nlet AuthGuard = class AuthGuard {\n  constructor(auth, router) {\n    this.auth = auth;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (this.auth.isLoggedIn) return true;\n    // Redirect to login with returnUrl\n    return this.router.createUrlTree(['/auth/login'], {\n      queryParams: {\n        returnUrl: state.url\n      }\n    });\n  }\n};\nAuthGuard = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthGuard);\nexport { AuthGuard };","map":{"version":3,"names":["Injectable","AuthGuard","constructor","auth","router","canActivate","route","state","isLoggedIn","createUrlTree","queryParams","returnUrl","url","__decorate","providedIn"],"sources":["/Users/zaq/Documents/GitHub/Angular-APWU/src/app/core/guards/auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from '../auth/auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(private auth: AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree {\n    if (this.auth.isLoggedIn) return true;\n    // Redirect to login with returnUrl\n    return this.router.createUrlTree(['/auth/login'], { queryParams: { returnUrl: state.url } });\n  }\n}\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAKnC,IAAMC,SAAS,GAAf,MAAMA,SAAS;EACpBC,YAAoBC,IAAiB,EAAUC,MAAc;IAAzC,KAAAD,IAAI,GAAJA,IAAI;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEhEC,WAAWA,CAACC,KAA6B,EAAEC,KAA0B;IACnE,IAAI,IAAI,CAACJ,IAAI,CAACK,UAAU,EAAE,OAAO,IAAI;IACrC;IACA,OAAO,IAAI,CAACJ,MAAM,CAACK,aAAa,CAAC,CAAC,aAAa,CAAC,EAAE;MAAEC,WAAW,EAAE;QAAEC,SAAS,EAAEJ,KAAK,CAACK;MAAG;IAAE,CAAE,CAAC;EAC9F;CACD;AARYX,SAAS,GAAAY,UAAA,EADrBb,UAAU,CAAC;EAAEc,UAAU,EAAE;AAAM,CAAE,CAAC,C,EACtBb,SAAS,CAQrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}