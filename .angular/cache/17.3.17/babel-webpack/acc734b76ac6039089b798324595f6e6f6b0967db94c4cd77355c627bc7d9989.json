{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BlogService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = '/api/blog';\n  }\n  getAll() {\n    return this.http.get(this.baseUrl);\n  }\n  get(id) {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n  create(post) {\n    return this.http.post(this.baseUrl, post);\n  }\n  update(id, post) {\n    return this.http.put(`${this.baseUrl}/${id}`, post);\n  }\n  delete(id) {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function BlogService_Factory(t) {\n      return new (t || BlogService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: BlogService,\n      factory: BlogService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BlogService","constructor","http","baseUrl","getAll","get","id","create","post","update","put","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Zachary\\Documents\\GitHub\\Angular-APWU\\src\\app\\features\\blog\\services\\blog.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface BlogPost {\r\n  id: number;\r\n  title: string;\r\n  content: string;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BlogService {\r\n  private readonly baseUrl = '/api/blog';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAll(): Observable<BlogPost[]> {\r\n    return this.http.get<BlogPost[]>(this.baseUrl);\r\n  }\r\n\r\n  get(id: number): Observable<BlogPost> {\r\n    return this.http.get<BlogPost>(`${this.baseUrl}/${id}`);\r\n  }\r\n\r\n  create(post: BlogPost): Observable<BlogPost> {\r\n    return this.http.post<BlogPost>(this.baseUrl, post);\r\n  }\r\n\r\n  update(id: number, post: BlogPost): Observable<BlogPost> {\r\n    return this.http.put<BlogPost>(`${this.baseUrl}/${id}`, post);\r\n  }\r\n\r\n  delete(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.baseUrl}/${id}`);\r\n  }\r\n}\r\n"],"mappings":";;AAWA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFP,KAAAC,OAAO,GAAG,WAAW;EAEC;EAEvCC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,IAAI,CAACF,OAAO,CAAC;EAChD;EAEAE,GAAGA,CAACC,EAAU;IACZ,OAAO,IAAI,CAACJ,IAAI,CAACG,GAAG,CAAW,GAAG,IAAI,CAACF,OAAO,IAAIG,EAAE,EAAE,CAAC;EACzD;EAEAC,MAAMA,CAACC,IAAc;IACnB,OAAO,IAAI,CAACN,IAAI,CAACM,IAAI,CAAW,IAAI,CAACL,OAAO,EAAEK,IAAI,CAAC;EACrD;EAEAC,MAAMA,CAACH,EAAU,EAAEE,IAAc;IAC/B,OAAO,IAAI,CAACN,IAAI,CAACQ,GAAG,CAAW,GAAG,IAAI,CAACP,OAAO,IAAIG,EAAE,EAAE,EAAEE,IAAI,CAAC;EAC/D;EAEAG,MAAMA,CAACL,EAAU;IACf,OAAO,IAAI,CAACJ,IAAI,CAACS,MAAM,CAAO,GAAG,IAAI,CAACR,OAAO,IAAIG,EAAE,EAAE,CAAC;EACxD;;;uBAvBWN,WAAW,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXf,WAAW;MAAAgB,OAAA,EAAXhB,WAAW,CAAAiB,IAAA;MAAAC,UAAA,EADE;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}